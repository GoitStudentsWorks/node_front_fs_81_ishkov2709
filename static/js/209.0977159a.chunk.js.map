{"version":3,"file":"static/js/209.0977159a.chunk.js","mappings":"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","sources":["utils/defineMonth.js","store/waterData/selectors.js","hooks/useWaterData.js","components/DailyNorma/DailyNorma.styled.jsx","schemas/validationSchema.js","components/common/FormInput/FormInput.styled.jsx","components/common/FormInput/FormInput.jsx","components/DailyNormaModal/DailyNormaModal.styled.jsx","components/DailyNormaModal/DailyNormaModal.jsx","components/DailyNorma/DailyNorma.jsx","components/TodayWaterListItem/TodayWaterListItem.styled.jsx","components/RemoveListItemModal/RemoveListItemModal.styled.jsx","components/RemoveListItemModal/RemoveListItemModal.jsx","components/TodayListModal/TodayListModal.styled.jsx","components/TodayListModal/TodayListModal.jsx","components/TodayWaterListItem/TodayWaterListItem.jsx","components/TodayWaterList/TodayWaterList.styled.jsx","components/TodayWaterList/TodayWaterList.jsx","components/MonthStatsTable/MonthStatsTable.styled.jsx","components/MonthStatsTable/PaginationMonth/PaginationMonth.styled.jsx","components/MonthStatsTable/PaginationMonth/PaginationMonth.jsx","components/MonthStatsTable/DayItemCalendar/DayItemCalendar.styled.jsx","components/MonthStatsTable/DayItemCalendar/DaysGeneralStats/DaysGeneralStats.styled.jsx","components/MonthStatsTable/DayItemCalendar/DaysGeneralStats/DaysGeneralStats.jsx","components/MonthStatsTable/DayItemCalendar/DayItemCalendar.jsx","components/MonthStatsTable/MonthStatsTable.jsx","hooks/useDaysOfMonth.js","components/WaterRatioPanel/WaterRatioPanel.styled.jsx","components/WaterRatioPanel/WaterRatioPanel.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { format } from 'date-fns';\n\nexport const defineMonth = (year, month, day) => {\n  return format(new Date(year, month, day), 'MMMM');\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const dataTodaySelector = state => state.waterData.dataToday;\n\nexport const selectDailyNorma = state => state.auth.user.dailyNorma;\n\nexport const selectTotalTodayDailyWater = createSelector(\n  dataTodaySelector,\n  selectDailyNorma,\n  (waterData, norma) => {\n    const totalTodayWater = waterData.reduce((total, waterData) => {\n      return total + waterData.dosage;\n    }, 0);\n    return Number((totalTodayWater / 1000 / norma) * 100).toFixed(0);\n  }\n);\n\nexport const selectIsLoading = state => state.waterData.isLoading;\n\nexport const selectTodayListModalOpen = state =>\n  state.waterData.todayListModalOpen;\n\nexport const targetDaySelector = state => state.waterData.targetDay;\n\nexport const daysOfMonthSelector = state => state.waterData.daysOfMonth;\n\nexport const isLoadingSelector = state => state.waterData.isLoading;\n\nexport const isChangeNoteSelector = state => state.waterData.isChangeNote;\n","import { useSelector } from 'react-redux';\nimport {\n  dataTodaySelector,\n  selectTotalTodayDailyWater,\n  selectIsLoading,\n  targetDaySelector,\n  daysOfMonthSelector,\n  isChangeNoteSelector,\n} from 'store/waterData/selectors';\n\nexport const useWaterData = () => {\n  const dataToday = useSelector(dataTodaySelector);\n  const totalTodayDailyWater = useSelector(selectTotalTodayDailyWater);\n  const isLoading = useSelector(selectIsLoading);\n  const targetDay = useSelector(targetDaySelector);\n  const daysOfTheMonth = useSelector(daysOfMonthSelector);\n  const isChangeNote = useSelector(isChangeNoteSelector);\n  const daysOfMonth = useSelector(daysOfMonthSelector);\n\n  return {\n    dataToday,\n    totalTodayDailyWater,\n    isLoading,\n    targetDay,\n    daysOfTheMonth,\n    isChangeNote,\n    daysOfMonth,\n  };\n};\n","import styled from 'styled-components';\nimport { color } from 'styles/colors';\n\nexport const DailyNormaContainer = styled.div`\nwidth: 164px;\n// height: 76px;\n/* position: absolute; */\npadding: 8px 20px 8px 20px;\nborder-radius: 10px;\n// border: 1px solid ${color.secondary.azure};\ndisplay: flex;\nflex-direction: column;\ngap: 12px;\nbox-shadow: 0px 4px 8px 4px rgba(158, 187, 255, 0.12);\n`\n\nexport const DailyNormaHeader = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n`;\nexport const DailyNormaContainerWaterStat = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const DailyNormaWaterNorma = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  color: ${color.primary.blue};\n`;\n\nexport const DailyNormaButton = styled.button`\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0em;\n  text-align: left;\n  border: none;\n  background-color: transparent;\n  color: ${color.secondary.azure};\n`;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  gender: Yup.string().required('Required'),\n  weight: Yup.number()\n    .required('Required')\n    .min(0, 'Weight must be a positive number'),\n  activityTime: Yup.number()\n    .required('Required')\n    .min(0, 'Activity time must be a positive number'),\n  drankWaterAmount: Yup.number().required('Required'),\n});\n\nexport default validationSchema;\n","import styled from 'styled-components';\nimport { color } from 'styles/colors';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  font-size: 18px;\n  line-height: 1.33;\n`;\n\nexport const LableAddEdit = styled(Label)`\n  gap: 12px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n\n  padding: 12px 10px;\n\n  color: ${color.primary.blue};\n  border-radius: 6px;\n  border: 1px solid ${color.secondary.gray};\n  background-color: ${color.primary.white};\n\n  font-size: 16px;\n  line-height: 1.25;\n\n  &::placeholder {\n    color: ${color.secondary.azure};\n  }\n`;\n\nexport const AuthInput = styled(Input)`\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n\nexport const SettingsInput = styled(Input)`\n  @media screen and (min-width: 768px) {\n    width: 392px;\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  color: ${color.secondary.tomato};\n  font-size: 14px;\n  line-height: 1.28;\n`;\n","import {\n  Label,\n  AuthInput,\n  SettingsInput,\n  Input,\n  LableAddEdit,\n  ErrorMessage,\n} from './FormInput.styled';\nimport { PropTypes } from 'prop-types';\n\nconst FormInput = ({ inputType, label, error, ...props }) => {\n  switch (inputType) {\n    case 'auth':\n      return (\n        <Label>\n          {label}\n          <AuthInput {...props} />\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n        </Label>\n      );\n    case 'settings':\n      return (\n        <Label>\n          {label}\n          <SettingsInput {...props} />\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n        </Label>\n      );\n    case 'dailyNorma':\n      return (\n        <Label>\n          {label}\n          <Input {...props} />\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n        </Label>\n      );\n    case 'addEdit':\n      return (\n        <LableAddEdit>\n          {label}\n          <Input {...props} />\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n        </LableAddEdit>\n      );\n    default:\n      return;\n  }\n};\n\nexport default FormInput;\n\nFormInput.propTypes = {\n  inputType: PropTypes.string,\n  label: PropTypes.string,\n  error: PropTypes.string,\n};\n","import styled from 'styled-components';\n// import sprite from 'img/sprites.svg';\nimport { color } from 'styles/colors';\n\nexport const ModalBox = styled.div`\n  width: 256px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 652px;\n    margin: 0 auto;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    margin: 0 auto;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  margin-bottom: 24px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 1.23;\n`;\n\nexport const CloseButton = styled.button`\n  background-color: transparent;\n`;\n\nexport const GenderFormulas = styled.div`\n  margin-bottom: 12px;\n\n  display: flex;\n  align-items: center;\n  gap: 24px;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    align-items: start;\n    gap: 16px;\n  }\n`;\n\nexport const ItemsGenders = styled.p`\n  font-size: 16px;\n  line-height: 1.25;\n`;\n\nexport const Formulas = styled.span`\n  color: ${color.primary.blue};\n\n  font-size: 18px;\n  line-height: 1.33;\n`;\n\nexport const VolumeNorm = styled.p`\n  padding: 10px;\n  margin-bottom: 24px;\n\n  color: #8f8f8f;\n  border-radius: 10px;\n  border: 1px solid ${color.secondary.gray};\n\n  font-size: 12px;\n  line-height: 1.33;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormTitle = styled.p`\n  // margin-bottom: 16px;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n`;\n\nexport const Genders = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 24px;\n\n  label {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n\n    font-size: 16px;\n    line-height: 1.25;\n  }\n\n  input:checked {\n    fill: blue;\n  }\n`;\n\nexport const Required = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n`;\n\nexport const L = styled.b`\n  display: flex;\n  align-items: center;\n  margin-left: 6px;\n  font-size: 18px;\n  line-height: 24px;\n  display: inline-block;\n  color: #407bff;\n  flex-shrink: 0;\n`;\n\nexport const SaveWrapper = styled.div`\n  margin-top: 8px;\n  display: flex;\n  justify-content: flex-end;\n\n  @media (min-width: 768px) {\n    button {\n      width: 160px;\n      height: 44px;\n    }\n  }\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useFormik } from 'formik';\nimport validationSchema from 'schemas/validationSchema';\nimport FormInput from 'components/common/FormInput/FormInput';\nimport Button from 'components/common/Button';\nimport Icon from 'components/common/Icon/Icon';\nimport Modal from 'components/common/Modal';\nimport {\n  ModalBox,\n  ModalHeader,\n  CloseButton,\n  GenderFormulas,\n  ItemsGenders,\n  Formulas,\n  VolumeNorm,\n  StyledForm,\n  FormTitle,\n  Genders,\n  Required,\n  L,\n  SaveWrapper,\n} from './DailyNormaModal.styled';\nimport { useContext } from 'react';\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\nimport { useDispatch } from 'react-redux';\nimport { updateDailyNorma } from 'store/auth/thunk';\nimport { useAuth } from 'hooks/useAuth';\n\nconst DailyNormaModal = () => {\n  const toggleModal = useContext(ModalContext);\n  const dispatch = useDispatch();\n\n  const { user } = useAuth();\n\n  const [calculatedWaterAmount, setCalculatedWaterAmount] = useState(0);\n\n  const calculateWaterAmount = useCallback(values => {\n    const weightCoefficient = values.gender === 'female' ? 0.03 : 0.04;\n    const timeCoefficient = values.gender === 'female' ? 0.4 : 0.6;\n    const calculatedAmount =\n      values.weight * weightCoefficient + values.activityTime * timeCoefficient;\n    setCalculatedWaterAmount(calculatedAmount.toFixed(2));\n  }, []);\n\n  const handleInputChange = (e, fieldName) => {\n    formik.handleChange(e);\n    const inputText = e.target.value;\n    let numericValue = parseFloat(inputText);\n    if (isNaN(numericValue)) {\n      numericValue = 0;\n    }\n    formik.setFieldValue(fieldName, numericValue);\n  };\n\n  const handleSubmit = async () => {\n    dispatch(updateDailyNorma(formik.values.drankWaterAmount));\n    formik.resetForm();\n    toggleModal();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      gender: user.gender,\n      weight: 0,\n      activityTime: 0,\n      drankWaterAmount: 0,\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n  });\n\n  useEffect(() => {\n    calculateWaterAmount(formik.values);\n  }, [calculateWaterAmount, formik.values]);\n\n  const onClickModalClose = () => {\n    toggleModal();\n  };\n\n  return (\n    <Modal onClose={toggleModal}>\n      <ModalBox>\n        <>\n          <ModalHeader>\n            My daily norma\n            <CloseButton onClick={onClickModalClose}>\n              <Icon\n                name=\"close\"\n                width={12}\n                height={12}\n                fill=\"#ffffff00\"\n                stroke=\"#407bff\"\n                className=\"icon\"\n              />\n            </CloseButton>\n          </ModalHeader>\n\n          <GenderFormulas>\n            <ItemsGenders>\n              For girl:\n              <Formulas> V=(M*0.03) + (T*0.4)</Formulas>\n            </ItemsGenders>\n            <ItemsGenders>\n              For man:\n              <Formulas> V=(M*0.04) + (T*0.6)</Formulas>\n            </ItemsGenders>\n          </GenderFormulas>\n\n          <VolumeNorm>\n            *V is the volume of the water norm in liters per day, M is your body\n            weight, T is the time of active sports, or another type of activity\n            commensurate in terms of loads (in the absence of these, you must\n            set 0)\n          </VolumeNorm>\n\n          <StyledForm>\n            <FormTitle>Calculate your rate:</FormTitle>\n\n            <Genders>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"gender\"\n                  checked={formik.values.gender === 'female'}\n                  onChange={() => formik.setFieldValue('gender', 'female')}\n                />\n                For girl\n              </label>\n\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"gender\"\n                  checked={formik.values.gender === 'male'}\n                  onChange={() => formik.setFieldValue('gender', 'male')}\n                />\n                For man\n              </label>\n            </Genders>\n\n            <FormInput\n              label=\"Enter your weight in kilograms:\"\n              inputType=\"dailyNorma\"\n              value={formik.values.weight}\n              onChange={e => handleInputChange(e, 'weight')}\n              onBlur={formik.handleBlur}\n              name=\"weight\"\n              error={formik.touched.weight && formik.errors.weight}\n            />\n\n            <FormInput\n              label=\"Enter the time of active participation in sports or other\n                activities with a high physical load:\"\n              inputType=\"dailyNorma\"\n              value={formik.values.activityTime}\n              onChange={e => handleInputChange(e, 'activityTime')}\n              onBlur={formik.handleBlur}\n              name=\"activityTime\"\n              error={formik.touched.activityTime && formik.errors.activityTime}\n            />\n\n            <Required>\n              <>The required amount of water in liters per day:</>\n              <L>\n                {isNaN(calculatedWaterAmount)\n                  ? 'Invalid'\n                  : `${calculatedWaterAmount} L`}\n              </L>\n            </Required>\n\n            <FormInput\n              label=\"Write down how much water you will drink:\"\n              inputType=\"dailyNorma\"\n              value={formik.values.drankWaterAmount}\n              onChange={e => handleInputChange(e, 'drankWaterAmount')}\n              onBlur={formik.handleBlur}\n              name=\"drankWaterAmount\"\n              error={\n                formik.touched.drankWaterAmount &&\n                formik.errors.drankWaterAmount\n              }\n            />\n\n            <SaveWrapper>\n              <Button type=\"submit\" onClick={handleSubmit}>\n                Save\n              </Button>\n            </SaveWrapper>\n          </StyledForm>\n        </>\n      </ModalBox>\n    </Modal>\n  );\n};\n\nexport default DailyNormaModal;\n","import {\n  DailyNormaButton,\n  DailyNormaContainer,\n  DailyNormaContainerWaterStat,\n  DailyNormaHeader,\n  DailyNormaWaterNorma,\n} from './DailyNorma.styled';\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\nimport { useContext } from 'react';\nimport DailyNormaModal from 'components/DailyNormaModal/DailyNormaModal';\nimport { useAuth } from 'hooks/useAuth';\n\nconst DailyNorma = () => {\n  const toggleModal = useContext(ModalContext);\n\n  const { dailyNorma } = useAuth();\n\n  const openDailyNormaModal = () => {\n    toggleModal(<DailyNormaModal />);\n  };\n\n  return (\n    <DailyNormaContainer>\n      <DailyNormaHeader>My daily norma</DailyNormaHeader>\n      <DailyNormaContainerWaterStat>\n        <DailyNormaWaterNorma>{`${dailyNorma}L`}</DailyNormaWaterNorma>\n        <DailyNormaButton onClick={openDailyNormaModal}>Edit</DailyNormaButton>\n      </DailyNormaContainerWaterStat>\n    </DailyNormaContainer>\n  );\n};\n\nexport default DailyNorma;\n","import styled from 'styled-components';\nimport { color } from 'styles/colors';\n\nexport const WaterInfoContainer = styled.div`\n  width: 166px;\n  height: 26px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 206px;\n    height: 36px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const WaterInfo = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  color: ${color.primary.blue};\n`;\n\nexport const WaterTime = styled.p`\n  font-size: 12px;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  color: ${color.primary.black};\n`;\n\nexport const ButtonControlContainer = styled.div`\n  width: 50px;\n  height: 16px;\n  display: flex;\n  align-items: center;\n  gap: 18px;\n`;\n\nexport const ButtonControl = styled.button`\n  width: 16px;\n  height: 16px;\n  background-color: transparent;\n  border: none;\n`;\n","import styled from 'styled-components';\n\nexport const DeleteModalBox = styled.div`\n  width: 256px;\n  height: 232px;\n  padding: 8px 12px;\n\n  @media screen and (min-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 544px;\n    height: 144px;\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  display: block;\n  margin-top: 20px;\n\n  @media screen and (min-width: 767px) {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 4px;\n  }\n`;\nexport const DeleteModalTitle = styled.h2`\n  margin-top: 5px;\n  margin-bottom: 25px;\n  font-family: Roboto;\n  font-size: 26px;\n  font-weight: 500;\n  color: #2f2f2f;\n\n  @media screen and (max-width: 767px) {\n    line-height: 32px;\n  }\n`;\nexport const DeleteModalDescription = styled.span`\n  font-family: Roboto;\n  font-size: 18px;\n  font-weight: 500;\n  color: #2f2f2f;\n\n  @media screen and (max-width: 767px) {\n    line-height: 20px;\n  }\n`;\nexport const TitleBox = styled.div``;\n\nexport const ButtonPadding = styled.span`\n  padding: 0 25px;\n\n  @media screen and (max-width: 767px) {\n    width: 232px;\n    font-size: 16px;\n    font-weight: 500;\n  }\n`;\nexport const ButtonMargin = styled.span`\n  margin-left: 40px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  background: none;\n\n  @media screen and (max-width: 768px) {\n    margin-left: 210px;\n    margin-top: 9px;\n  }\n\n  @media screen and (min-width: 767px) {\n    margin-left: 508px;\n    margin-top: 5px;\n  }\n`;\n\nexport const BrSpan = styled.span`\n  @media screen and (max-width: 767px) {\n    margin-left: 10px;\n  }\n`;\n","import Modal from 'components/common/Modal';\nimport Button from 'components/common/Button';\nimport { PropTypes } from 'prop-types';\nimport { useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\nimport { deleteWaterTodayById } from 'store/waterData/thunk';\nimport {\n  DeleteModalBox,\n  ButtonBox,\n  DeleteModalTitle,\n  DeleteModalDescription,\n  TitleBox,\n  ButtonPadding,\n  ButtonMargin,\n  CloseButton,\n  BrSpan,\n} from './RemoveListItemModal.styled';\nimport Icon from 'components/common/Icon';\n\nconst RemoveListItemModal = id => {\n  const toggleModal = useContext(ModalContext);\n\n  const dispatch = useDispatch();\n\n  const onClickDeleteBtn = () => {\n    dispatch(deleteWaterTodayById(id.id));\n    toggleModal();\n  };\n\n  const onClickCloseBtn = () => {\n    toggleModal();\n  };\n\n  return (\n    <Modal onClose={toggleModal}>\n      <DeleteModalBox>\n        <TitleBox>\n          <CloseButton onClick={onClickCloseBtn}>\n            <Icon width=\"15px\" height=\"15px\" name=\"close\" />\n          </CloseButton>\n          <DeleteModalTitle>Delete entry</DeleteModalTitle>\n          <DeleteModalDescription>\n            Are you sure you want to <BrSpan /> delete the entry?\n          </DeleteModalDescription>\n        </TitleBox>\n\n        <ButtonBox>\n          <Button\n            buttonType=\"cancel\"\n            style={{ boxShadow: 'none' }}\n            onClick={onClickCloseBtn}\n          >\n            <ButtonPadding>Cancel</ButtonPadding>\n          </Button>\n          <ButtonMargin>\n            <Button buttonType=\"delete\" onClick={onClickDeleteBtn}>\n              <ButtonPadding>Delete</ButtonPadding>\n            </Button>\n          </ButtonMargin>\n        </ButtonBox>\n      </DeleteModalBox>\n    </Modal>\n  );\n};\n\nexport default RemoveListItemModal;\n\nRemoveListItemModal.propTypes = {\n  id: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { color } from 'styles/colors';\n\nexport const TodayModalListHeader = styled.p`\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 32px;\n  letter-spacing: 0em;\n  text-align: left;\n  color: ${color.primary.black};\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const TodayModalListTitle = styled.p`\n  width: 256px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: 0em;\n  text-align: left;\n  color: ${color.primary.black};\n`;\n\nexport const TodayModalListSubTitle = styled.p`\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0em;\n  text-align: left;\n  color: ${color.primary.black};\n`;\n\nexport const CommonContainer = styled.div`\n  position: relative;\n  width: 256px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n  }\n`;\n\nexport const WaterInfoContainer = styled.div`\n  width: 254px;\n  display: flex;\n  padding: 8px 24px 8px 24px;\n  border-radius: 10px;\n  gap: 12px;\n  background-color: ${color.secondary.gray};\n`;\n\nexport const WaterInfo = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  color: ${color.primary.blue};\n`;\nexport const WaterTime = styled.p`\n  font-size: 12px;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  color: ${color.primary.black};\n`;\n\nexport const AmountWaterContainer = styled.div`\n  width: 194px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const AmountWaterButtonContainer = styled.div`\n  width: 194px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 24px 8px 24px;\n  border-radius: 10px;\n  gap: 12px;\n`;\n\nexport const WaterValueContainer = styled.div`\n  width: 92px;\n  height: 36px;\n  padding: 6px 10px 6px 10px;\n  border-radius: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${color.secondary.gray};\n`;\n\nexport const WaterValue = styled.p`\n  width: 92px;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: ${color.primary.blue};\n`;\n\nexport const ButtonContainer = styled.button`\n  width: 44px;\n  height: 44px;\n  padding: 10px;\n  border-radius: 30px;\n  border: 1px solid ${color.primary.blue};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n`;\n\nexport const SaveContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: end;\n  align-items: center;\n  gap: 24px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\nexport const CloseButton = styled.button`\n  width: 24px;\n  height: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  background: none;\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n","import { color } from 'styles/colors';\nimport {\n  TodayModalListHeader,\n  WaterInfoContainer,\n  WaterInfo,\n  WaterTime,\n  TodayModalListTitle,\n  AmountWaterButtonContainer,\n  ButtonContainer,\n  WaterValueContainer,\n  WaterValue,\n  SaveContainer,\n  CommonContainer,\n  TodayModalListSubTitle,\n  AmountWaterContainer,\n  CloseButton,\n} from './TodayListModal.styled';\nimport { PropTypes } from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editWaterTodayById, saveWaterToday } from 'store/waterData/thunk';\nimport { MONTH } from '../../constants/month';\nimport { useContext } from 'react';\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\nimport Icon from 'components/common/Icon';\nimport Modal from 'components/common/Modal';\nimport Button from 'components/common/Button';\nimport FormInput from 'components/common/FormInput';\nimport { useWaterData } from 'hooks/useWaterData';\n\nconst TodayListModal = ({ type = 'save', id }) => {\n  const dispatch = useDispatch();\n  const { dataToday } = useWaterData();\n\n  const [waterValue, setWaterValue] = useState(() => {\n    if (dataToday.length === 0) {\n      return Number(0);\n    }\n    const lastAddWaterDosageIndex = dataToday.length - 1;\n    return dataToday[lastAddWaterDosageIndex].dosage;\n  });\n\n  const [timeValue, setTimeValue] = useState(() => {\n    const dateNow = new Date();\n    let hours = dateNow.getHours().toString();\n    let minutes = dateNow.getMinutes().toString();\n    if (hours.length === 1) {\n      hours = '0' + hours;\n    }\n    if (minutes.length === 1) {\n      minutes = '0' + minutes;\n    }\n    return `${hours}:${minutes}`;\n  });\n\n  useEffect(() => {\n    if (type === 'edit') {\n      const waterRecord = dataToday.find(data => data._id === id);\n      setTimeValue(waterRecord.time);\n      setWaterValue(waterRecord.dosage);\n    }\n  }, [dataToday, id, type]);\n\n  const toggleModal = useContext(ModalContext);\n\n  const handleBlurTimeInput = () => {\n    const timeElement = document.querySelectorAll('[water_attr=\"timeValue\"]');\n    timeElement.forEach(element => (element.innerHTML = timeValue));\n  };\n\n  const handleChangeWaterInput = event => {\n    if (event.currentTarget.value <= 0) {\n      return setWaterValue(1);\n    }\n    if (event.currentTarget.value >= 3000) {\n      return setWaterValue(3000);\n    }\n    setWaterValue(event.currentTarget.value);\n  };\n\n  const handleDecremetWater = () => {\n    if (waterValue - 50 <= 0) {\n      setWaterValue(0);\n    } else {\n      setWaterValue(waterValue - 50);\n    }\n  };\n\n  const handleIncremetWater = () => {\n    setWaterValue(waterValue + 50);\n  };\n\n  const handleBlurWaterInput = event => {\n    setWaterValue(Number(event.currentTarget.value));\n    const waterElement = document.querySelectorAll('[water_attr=\"waterValue\"]');\n    waterElement.forEach(element => (element.innerHTML = waterValue));\n  };\n\n  const handleChangeTimeInput = event => {\n    setTimeValue(event.currentTarget.value);\n  };\n\n  const hadleClickSave = () => {\n    const today = new Date();\n    const data = {\n      dosage: waterValue,\n      time: timeValue,\n      day: today.getDate(),\n      month: MONTH[today.getMonth()],\n      year: today.getFullYear(),\n    };\n    if (type === 'edit') {\n      dispatch(editWaterTodayById({ id, data }));\n    } else {\n      dispatch(saveWaterToday(data));\n    }\n    toggleModal();\n  };\n\n  const onClickCloseBtn = () => {\n    toggleModal();\n  };\n\n  return (\n    <Modal onClose={toggleModal}>\n      <CommonContainer>\n        {type === 'edit' ? (\n          <TodayModalListHeader>\n            Edit the entered amount of water\n            <CloseButton onClick={onClickCloseBtn}>\n              <Icon width=\"12\" height=\"12\" name=\"close\" />\n            </CloseButton>\n          </TodayModalListHeader>\n        ) : (\n          <TodayModalListHeader>\n            Add of water\n            <CloseButton onClick={onClickCloseBtn}>\n              <Icon width=\"12\" height=\"12\" name=\"close\" />\n            </CloseButton>\n          </TodayModalListHeader>\n        )}\n        {type === 'edit' && (\n          <WaterInfoContainer>\n            <Icon name=\"glass\" stroke={color.primary.blue} />\n            <WaterInfo\n              water_attr=\"waterValue\"\n              id=\"waterInfo\"\n            >{`${waterValue}ml`}</WaterInfo>\n            <WaterTime\n              water_attr=\"timeValue\"\n              id=\"waterTime\"\n            >{`${timeValue}`}</WaterTime>\n          </WaterInfoContainer>\n        )}\n        {type === 'edit' ? (\n          <TodayModalListTitle>Correct entered data:</TodayModalListTitle>\n        ) : (\n          <TodayModalListTitle>Chose a value:</TodayModalListTitle>\n        )}\n        <AmountWaterContainer>\n          <TodayModalListSubTitle>Amount of water:</TodayModalListSubTitle>\n          <AmountWaterButtonContainer>\n            <ButtonContainer onClick={handleDecremetWater}>\n              <Icon name=\"minus\" stroke={color.primary.blue} />\n            </ButtonContainer>\n            <WaterValueContainer>\n              <WaterValue water_attr=\"waterValue\">{`${waterValue}ml`}</WaterValue>\n            </WaterValueContainer>\n            <ButtonContainer onClick={handleIncremetWater}>\n              <Icon name=\"plus\" stroke={color.primary.blue} />\n            </ButtonContainer>\n          </AmountWaterButtonContainer>\n        </AmountWaterContainer>\n        <FormInput\n          type=\"time\"\n          onBlur={handleBlurTimeInput}\n          onChange={handleChangeTimeInput}\n          inputType=\"addEdit\"\n          label=\"Recording time:\"\n          value={timeValue}\n        ></FormInput>\n        <FormInput\n          type=\"number\"\n          min=\"1\"\n          max=\"3000\"\n          onBlur={handleBlurWaterInput}\n          onChange={handleChangeWaterInput}\n          onClick={() => {\n            if (waterValue === 0) return setWaterValue('');\n          }}\n          inputType=\"addEdit\"\n          label=\"Enter the value of the water used:\"\n          value={waterValue}\n        ></FormInput>\n        <SaveContainer>\n          <WaterValue water_attr=\"waterValue\">{`${waterValue}ml`}</WaterValue>\n          <Button onClick={hadleClickSave} width=\"160\">\n            Save\n          </Button>\n        </SaveContainer>\n      </CommonContainer>\n    </Modal>\n  );\n};\n\nexport default TodayListModal;\n\nTodayListModal.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n};\n","import {\n  ButtonControl,\n  ButtonControlContainer,\n  WaterInfo,\n  WaterInfoContainer,\n  WaterTime,\n} from './TodayWaterListItem.styled';\nimport Icon from 'components/common/Icon';\nimport { PropTypes } from 'prop-types';\nimport { color } from 'styles/colors';\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\nimport { useContext } from 'react';\nimport RemoveListItemModal from 'components/RemoveListItemModal/RemoveListItemModal';\nimport TodayListModal from 'components/TodayListModal/TodayListModal';\n\nconst TodayWaterListItem = ({ waterInfo }) => {\n  \n  const toggleModal = useContext(ModalContext);\n\n  const handleClickEdit = id => {\n    toggleModal(<TodayListModal type=\"edit\" id={id} />);\n  };\n\n  const handleClickDelete = id => {\n    toggleModal(<RemoveListItemModal id={id} />);\n  };\n\n  return (\n    <>\n      <WaterInfoContainer>\n        <Icon name=\"glass\" stroke={color.primary.blue} />\n        <WaterInfo>{`${waterInfo.dosage}ml`}</WaterInfo>\n        <WaterTime>{`${waterInfo.time}`}</WaterTime>\n      </WaterInfoContainer>\n      <ButtonControlContainer>\n        <ButtonControl onClick={() => handleClickEdit(waterInfo._id)}>\n          <Icon\n            name=\"note\"\n            width=\"16px\"\n            height=\"16px\"\n            stroke={color.primary.blue}\n          />\n        </ButtonControl>\n        <ButtonControl onClick={() => handleClickDelete(waterInfo._id)}>\n          <Icon\n            name=\"remove\"\n            width=\"16px\"\n            height=\"16px\"\n            stroke={color.secondary.tomato}\n          />\n        </ButtonControl>\n      </ButtonControlContainer>\n    </>\n  );\n};\n\nexport default TodayWaterListItem;\n\nTodayWaterListItem.propTypes = {\n  waterInfo: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { color } from 'styles/colors';\n\nexport const TodayWaterListItemContainer = styled.li`\n  // width: 254px;\n  // height: 26px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 12px;\n  border-bottom: 1px solid ${color.secondary.gray};\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1440px) {\n    //width: 534px;\n  }\n`;\n\nexport const TodayWaterListContainer = styled.div`\n  width: 254px;\n  //height: 260px;\n  display: flex;\n  // gap: 16px;\n  flex-direction: column;\n  justify-content: center;\n  // align-items: center;\n\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 534px;\n  }\n`;\n\nexport const TodayWaterListing = styled.ul`\n  width: 254px;\n  height: 212px;\n  display: flex;\n  gap: 12px;\n  flex-direction: column;\n  // justify-content: center;\n  // align-items: center;\n  overflow-y: scroll;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n    height: 212px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 534px;\n  }\n\n  &\n/* width */\n::-webkit-scrollbar {\n    width: 4px;\n  }\n  &\n/* Track */\n::-webkit-scrollbar-track {\n    background: ${color.secondary.gray};\n  }\n  &\n/* Handle */\n::-webkit-scrollbar-thumb {\n    background: ${color.primary.blue};\n  }\n  &\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n    background: ${color.primary.blue};\n  }\n`;\n\nexport const TodayWaterListHeader = styled.p`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 30px;\n  letter-spacing: 0em;\n  text-align: left;\n  padding-bottom: 16px;\n  color: ${color.primary.black} @media screen and (min-width: 768px) {\n    font-size: 26px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const AddWaterButton = styled.button`\n  display: flex;\n  gap: 8px;\n\n  align-items: center;\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  letter-spacing: 0em;\n  text-align: left;\n\n  background-color: transparent;\n  color: ${color.primary.blue};\n  border: none;\n\n  margin-top: 12px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n\n    line-height: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n","import TodayWaterListItem from '../TodayWaterListItem/TodayWaterListItem';\nimport Icon from 'components/common/Icon';\nimport { color } from 'styles/colors';\nimport {\n  TodayWaterListContainer,\n  TodayWaterListHeader,\n  TodayWaterListing,\n  AddWaterButton,\n  TodayWaterListItemContainer,\n} from './TodayWaterList.styled';\nimport { useSelector } from 'react-redux';\nimport { dataTodaySelector, selectIsLoading } from 'store/waterData/selectors';\nimport Loader from 'components/common/Loader';\nimport { useContext } from 'react';\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\nimport TodayListModal from 'components/TodayListModal/TodayListModal';\n\nconst TodayWaterList = () => {\n  const toggleModal = useContext(ModalContext);\n  const waterItems = useSelector(dataTodaySelector);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleClickAdd = () => {\n    toggleModal(<TodayListModal />);\n  };\n\n  return (\n    <TodayWaterListContainer>\n      {isLoading && <Loader />}\n      <TodayWaterListHeader>Today</TodayWaterListHeader>\n      <TodayWaterListing>\n        {waterItems.map(waterItem => (\n          <TodayWaterListItemContainer key={waterItem._id}>\n            <TodayWaterListItem waterInfo={waterItem} />\n          </TodayWaterListItemContainer>\n        ))}\n      </TodayWaterListing>\n      <AddWaterButton onClick={handleClickAdd}>\n        {' '}\n        <Icon name=\"plus\" stroke={color.primary.blue} /> Add Water\n      </AddWaterButton>\n    </TodayWaterListContainer>\n  );\n};\n\nexport default TodayWaterList;\n","import styled from 'styled-components';\nimport { color } from 'styles/colors';\n\nexport const CalendarBox = styled.div`\n  position: relative;\n  width: 264px;\n  height: 474px;\n\n  background-color: ${color.secondary.white};\n\n  @media screen and (min-width: 768px) {\n    position: static;\n    width: 646px;\n    height: 318px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const HeadBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 16px;\n`;\n\nexport const TitleBox = styled.b`\n  font-weight: 500;\n  font-size: 24px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 26px;\n  row-gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    column-gap: 34px;\n    row-gap: 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    column-gap: 22px;\n  }\n\n  animation: 250ms ease-in-out smoothAppearance;\n`;\n","import styled from 'styled-components';\nimport { color } from 'styles/colors';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const MonthAndYear = styled.p`\n  width: 120px;\n  text-align: center;\n  font-size: 16px;\n\n  color: ${color.primary.blue};\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n\n  background: transparent;\n\n  border: none;\n\n  transition: transform 250ms ease-in-out;\n\n  &:first-of-type .icon {\n    transform: rotate(90deg);\n  }\n\n  &:last-of-type .icon {\n    transform: rotate(270deg);\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.3);\n  }\n`;\n","import { useContext, useEffect } from 'react';\nimport { Btn, MonthAndYear, Wrapper } from './PaginationMonth.styled';\nimport Icon from 'components/common/Icon';\nimport { color } from 'styles/colors';\nimport { HomeContext } from 'pages/HomePage/HomePage';\nimport { useDispatch } from 'react-redux';\nimport { swithChangeNote } from 'store/waterData/waterDataSlice';\nimport { defineMonth } from 'utils/defineMonth';\nimport { useWaterData } from 'hooks/useWaterData';\n\nconst PaginationMonth = () => {\n  const { date, setDate, titleMonth, setTitleMonth } = useContext(HomeContext);\n  const dispatch = useDispatch();\n  const { isLoading } = useWaterData();\n\n  useEffect(() => {\n    if (date) {\n      setTitleMonth(defineMonth(date.year, date.month, date.day));\n    }\n  }, [date, setTitleMonth]);\n\n  const handleIncrementMonth = () => {\n    if (date.month + 1 > 11) {\n      setDate(prevState => ({\n        ...prevState,\n        year: prevState.year + 1,\n        month: 0,\n      }));\n      return dispatch(swithChangeNote(true));\n    }\n    setDate(prevState => ({\n      ...prevState,\n      month: prevState.month + 1,\n    }));\n    return dispatch(swithChangeNote(true));\n  };\n\n  const handleDecrementMonth = () => {\n    if (date.month - 1 < 0) {\n      setDate(prevState => ({\n        ...prevState,\n        year: prevState.year - 1,\n        month: 11,\n      }));\n      return dispatch(swithChangeNote(true));\n    }\n    setDate(prevState => ({\n      ...prevState,\n      month: prevState.month - 1,\n    }));\n    return dispatch(swithChangeNote(true));\n  };\n\n  return (\n    <Wrapper>\n      <Btn onClick={handleDecrementMonth} disabled={isLoading}>\n        <Icon\n          name=\"arrow-down\"\n          fill={color.primary.blue}\n          stroke={color.primary.blue}\n          width={14}\n          height={14}\n        />\n      </Btn>\n      <MonthAndYear>\n        {titleMonth}, {date.year}\n      </MonthAndYear>\n      <Btn onClick={handleIncrementMonth} disabled={isLoading}>\n        <Icon\n          name=\"arrow-down\"\n          fill={color.primary.blue}\n          stroke={color.primary.blue}\n          width={14}\n          height={14}\n        />\n      </Btn>\n    </Wrapper>\n  );\n};\n\nexport default PaginationMonth;\n","import styled from 'styled-components';\nimport { color } from 'styles/colors';\n\nexport const Item = styled.li`\n  position: static;\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n  }\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n\n  border-radius: 50%;\n\n  background-color: ${color.primary.white};\n\n  border: ${props =>\n    props.isDone ? 'none' : `1px solid ${color.secondary.orange}`};\n\n  margin-bottom: 4px;\n\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const CountDay = styled.p`\n  font-size: 14px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Percent = styled.p`\n  color: ${color.secondary.azure};\n\n  text-align: center;\n\n  font-size: 10px;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    font-size: 13px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 12px;\n  }\n`;\n","import styled from 'styled-components';\nimport { color } from 'styles/colors';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: -160px;\n  left: -7px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  width: 292px;\n  height: 188px;\n\n  padding: 24px 13px;\n\n  background-color: ${color.primary.white};\n\n  border-radius: 10px;\n\n  box-shadow: 0 4px 4px 0 #407bff4d;\n\n  z-index: 10;\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 16px;\n    top: -189px;\n    left: ${({ isToLeft }) => (isToLeft ? '17px' : '-275px')};\n  }\n\n  animation: 250ms ease-in-out smoothAppearance;\n`;\n\nexport const DateMonthTitle = styled.p`\n  color: ${color.primary.blue};\n`;\n\nexport const MarkTitle = styled.p`\n  color: ${color.primary.black};\n`;\n\nexport const Mark = styled.span`\n  color: ${color.primary.blue};\n\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const Btn = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n\n  top: 21px;\n  right: 13px;\n\n  @media screen and (min-width: 768px) {\n    right: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n\n  & .icon {\n    transform: rotate(45deg);\n  }\n`;\n","import Icon from 'components/common/Icon';\nimport {\n  Btn,\n  DateMonthTitle,\n  Mark,\n  MarkTitle,\n  Wrapper,\n} from './DaysGeneralStats.styled';\nimport { color } from 'styles/colors';\nimport { PropTypes } from 'prop-types';\nimport { removeTargetDay } from 'store/waterData/waterDataSlice';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from 'hooks/useAuth';\n\nconst firstOfFourDaysArr = [1, 2, 3, 4, 11, 12, 13, 14, 21, 22, 23, 24, 31];\n\nconst DaysGeneralStats = ({\n  targetDay: { day, month, servings = 0, percent },\n}) => {\n  const dispatch = useDispatch();\n  const { dailyNorma } = useAuth();\n\n  const handleClose = () => {\n    dispatch(removeTargetDay());\n  };\n\n  return (\n    <Wrapper isToLeft={firstOfFourDaysArr.includes(day)}>\n      <Btn onClick={handleClose}>\n        <Icon name=\"plus\" stroke={color.primary.blue} />\n      </Btn>\n      <DateMonthTitle>\n        {day}, {month}\n      </DateMonthTitle>\n      <MarkTitle>\n        Daily norma: <Mark>{dailyNorma} L</Mark>\n      </MarkTitle>\n      <MarkTitle>\n        Fulfillment of the daily norm: <Mark>{percent}%</Mark>\n      </MarkTitle>\n      <MarkTitle>\n        How many servings of water: <Mark>{servings}</Mark>\n      </MarkTitle>\n    </Wrapper>\n  );\n};\n\nexport default DaysGeneralStats;\n\nDaysGeneralStats.propTypes = {\n  targetDay: PropTypes.shape({\n    day: PropTypes.number,\n    month: PropTypes.string,\n    servings: PropTypes.number,\n    percent: PropTypes.number,\n  }),\n};\n","import { useDispatch } from 'react-redux';\nimport { Btn, CountDay, Item, Percent } from './DayItemCalendar.styled';\nimport { setTargetDay, removeTargetDay } from 'store/waterData/waterDataSlice';\nimport { memo, useContext, useEffect, useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { HomeContext } from 'pages/HomePage/HomePage';\nimport DaysGeneralStats from 'components/MonthStatsTable/DayItemCalendar/DaysGeneralStats';\nimport { useWaterData } from 'hooks/useWaterData';\nimport { useAuth } from 'hooks/useAuth';\n\nconst dateNow = new Date();\n\nconst DayItemCalendar = memo(({ day }) => {\n  const { titleMonth, date } = useContext(HomeContext);\n  const [percent, setPercent] = useState(0);\n  const [dayData, setDayData] = useState(null);\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth >= 1440);\n  const { targetDay, daysOfMonth, dataToday } = useWaterData();\n  const { dailyNorma } = useAuth();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (day) {\n      setDayData(\n        dateNow.getFullYear() === date.year &&\n          dateNow.getMonth() === date.month &&\n          dateNow.getDate() === day\n          ? {\n              day: day,\n              overall: dataToday.reduce((acc, el) => el.dosage + acc, 0),\n              servings: dataToday.length,\n            }\n          : daysOfMonth?.find(el => el.day === day)\n      );\n    }\n  }, [setDayData, dataToday, date, day, daysOfMonth]);\n\n  useEffect(() => {\n    if (daysOfMonth && dayData) {\n      const res =\n        dayData.overall >= dailyNorma * 1000\n          ? 100\n          : Math.round((dayData.overall / (dailyNorma * 1000)) * 100);\n      setPercent(res);\n    }\n  }, [daysOfMonth, setPercent, dayData, dailyNorma]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsDesktop(window.innerWidth >= 1440);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const handleOnTarget = () => {\n    const info = {\n      ...dayData,\n      month: titleMonth,\n      day,\n      percent,\n    };\n    dispatch(setTargetDay(info));\n  };\n\n  const handleOffTarget = () => {\n    dispatch(removeTargetDay());\n  };\n\n  return (\n    <Item>\n      {isDesktop ? (\n        <Btn\n          onMouseEnter={handleOnTarget}\n          onMouseLeave={handleOffTarget}\n          isDone={percent === 100}\n        >\n          <CountDay>{day}</CountDay>\n        </Btn>\n      ) : (\n        <Btn onClick={handleOnTarget} isDone={percent === 100}>\n          <CountDay>{day}</CountDay>\n        </Btn>\n      )}\n\n      <Percent>{percent}%</Percent>\n\n      {targetDay?.day === day && <DaysGeneralStats targetDay={targetDay} />}\n    </Item>\n  );\n});\n\nexport default DayItemCalendar;\n\nDayItemCalendar.propTypes = {\n  day: PropTypes.number,\n};\n","import { CalendarBox, HeadBox, List, TitleBox } from './MonthStatsTable.styled';\nimport { useContext } from 'react';\nimport { useDaysOfMonth } from 'hooks/useDaysOfMonth';\nimport { HomeContext } from 'pages/HomePage/HomePage';\nimport PaginationMonth from './PaginationMonth';\nimport DayItemCalendar from './DayItemCalendar';\nimport { useWaterData } from 'hooks/useWaterData';\n\nconst MonthStatsTable = () => {\n  const { date } = useContext(HomeContext);\n  const days = useDaysOfMonth(date);\n  const { isLoading } = useWaterData();\n\n  return (\n    <CalendarBox>\n      <HeadBox>\n        <TitleBox>Month</TitleBox>\n        <PaginationMonth />\n      </HeadBox>\n      {days.length > 0 && !isLoading && (\n        <List>\n          {days.map(({ year, month, day }) => {\n            return <DayItemCalendar key={`${year}${month}${day}`} day={day} />;\n          })}\n        </List>\n      )}\n    </CalendarBox>\n  );\n};\n\nexport default MonthStatsTable;\n","import { useEffect, useState } from 'react';\n\nexport const useDaysOfMonth = date => {\n  const [days, setDays] = useState(0);\n  const [arrMonth, setArrMonth] = useState([]);\n\n  useEffect(() => {\n    const generateDaysArray = () => {\n      const arr = [];\n      for (let i = 1; i <= days; i++) {\n        arr.push({ year: date.year, month: date.month, day: i });\n      }\n      setArrMonth(arr);\n    };\n\n    if (date) {\n      setDays(new Date(date.year, date.month + 1, 0).getDate());\n      setArrMonth([]);\n    }\n\n    generateDaysArray();\n  }, [date, days]);\n\n  return arrMonth;\n};\n","import styled from 'styled-components';\nimport { color } from '../../styles/colors';\n\nexport const WaterRatioPanelContainer = styled.div`\n  width: 280px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    gap: 24px;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    gap: 32px;\n  }\n`;\n\nexport const WaterRange = styled.input`\n  &[type='range'] {\n    -webkit-appearance: none;\n    margin: 5px 0;\n    width: 100%;\n    border-radius: 10px;\n    background-color: ${color.secondary.azure};\n    background-image: linear-gradient(\n      ${color.primary.blue},\n      ${color.primary.blue}\n    );\n    background-repeat: no-repeat;\n  }\n\n  &[type='range']:focus {\n    outline: none;\n  }\n\n  &[type='range']::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 8px;\n    animate: 0.2s;\n    border-radius: 10px;\n    -webkit-appearance: none;\n    box-shadow: none;\n    border: none;\n    background: transparent;\n  }\n\n  &[type='range']::-webkit-slider-thumb {\n    height: 14px;\n    width: 14px;\n    border-radius: 50%;\n    background: ${color.primary.white};\n    border: solid 1px ${color.primary.blue};\n    -webkit-appearance: none;\n    margin-top: -4px;\n  }\n\n  &[type='range']:focus::-webkit-slider-runnable-track {\n  }\n`;\n\nexport const WaterRangeHeader = styled.p`\n  font-size: 18px;\n  line-height: 24px;\n  letter-spacing: 0em;\n  text-align: left;\n  margin-bottom: 16px;\n  color: ${color.primary.blue};\n`;\nexport const WaterRangeContainer = styled.div`\n  position: relative;\n  height: 102px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 356px;\n    height: 90px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const MarksContainer = styled.div`\n  height: 32px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const Mark = styled.span`\n  position: absolute;\n  transform: translateX(-50%);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  text-align: center;\n  margin-bottom: 4px;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  color: ${color.primary.blue};\n\n  &::before {\n    color: ${color.secondary.azure};\n    content: '|';\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const LeftMark = styled.span`\n  transform: translateX(-50%);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: ${color.primary.blue};\n\n  &::before {\n    color: ${color.secondary.azure};\n    display: flex;\n    gap: 4px;\n    flex-direction: column;\n    content: '|';\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const RightMark = styled.span`\n  transform: translateX(50%);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: 0em;\n  text-align: center;\n  color: ${color.primary.blue};\n\n  &::before {\n    color: ${color.secondary.azure};\n    display: flex;\n    flex-direction: column;\n    content: '|';\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const AddWaterButton = styled.button`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  padding: 6px 76px 6px 76px;\n  background-color: ${color.primary.blue};\n  color: ${color.primary.white};\n  border: none;\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    padding: 10px 104px 10px 104px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 178px;\n    height: 44px;\n    padding: 10px 30px 10px 30px;\n  }\n`;\n","import { useEffect } from 'react';\nimport Icon from 'components/common/Icon';\nimport { color } from 'styles/colors';\nimport {\n  WaterRatioPanelContainer,\n  WaterRangeHeader,\n  WaterRangeContainer,\n  WaterRange,\n  MarksContainer,\n  LeftMark,\n  RightMark,\n  Mark,\n  AddWaterButton,\n} from './WaterRatioPanel.styled';\nimport TodayListModal from 'components/TodayListModal/TodayListModal';\nimport { ModalContext } from 'components/common/ModalProvider/ModalProvider';\nimport { useContext } from 'react';\nimport { useWaterData } from 'hooks/useWaterData';\n\nconst WaterRatioPanel = () => {\n  const toggleModal = useContext(ModalContext);\n\n  const { totalTodayDailyWater } = useWaterData();\n\n  const handleClickAdd = () => {\n    toggleModal(<TodayListModal />);\n  };\n\n  useEffect(() => {\n    const ele = document.querySelector('#mark');\n    if (ele) {\n      let newVal = Number(((totalTodayDailyWater - 0) * 100) / (100 - 0));\n      newVal = newVal >= 100 ? 100 : newVal;\n      ele.style.left = `calc(${newVal}% + (${8 - newVal * 0.15}px))`;\n    }\n  }, [totalTodayDailyWater]);\n\n  const getBackgroundSize = () => {\n    return {\n      backgroundSize: `${totalTodayDailyWater}%`,\n    };\n  };\n\n  return (\n    <WaterRatioPanelContainer>\n      <WaterRangeContainer>\n        <WaterRangeHeader>Today</WaterRangeHeader>\n        <WaterRange\n          type=\"range\"\n          maxValue={100}\n          minValue={0}\n          value={totalTodayDailyWater}\n          readOnly={true}\n          style={getBackgroundSize()}\n        />\n        <MarksContainer>\n          <LeftMark>0%</LeftMark>\n          <Mark id=\"mark\">{`${\n            totalTodayDailyWater > 100 ? 100 : totalTodayDailyWater\n          }%`}</Mark>\n          <RightMark>100%</RightMark>\n        </MarksContainer>\n      </WaterRangeContainer>\n      <AddWaterButton onClick={handleClickAdd}>\n        <Icon name=\"add\" stroke={color.primary.white} /> Add Water\n      </AddWaterButton>\n    </WaterRatioPanelContainer>\n  );\n};\n\nexport default WaterRatioPanel;\n","import { defineMonth } from 'utils/defineMonth';\nimport { useDispatch } from 'react-redux';\nimport { useWaterData } from 'hooks/useWaterData';\nimport { getMonthDays, getWaterToday } from 'store/waterData/thunk';\nimport { createContext, useEffect, useState } from 'react';\nimport { Wrapper, Box, WaterList, DailyNormaBox } from './HomePage.styled';\nimport Container from 'components/common/Container';\nimport DailyNorma from 'components/DailyNorma/DailyNorma';\nimport TodayWaterList from 'components/TodayWaterList/TodayWaterList';\nimport TodayListModal from 'components/TodayListModal/TodayListModal';\nimport MonthStatsTable from 'components/MonthStatsTable';\nimport WaterRatioPanel from 'components/WaterRatioPanel/WaterRatioPanel';\nimport Loader from 'components/common/Loader';\n\nconst dateNow = new Date();\n\nexport const HomeContext = createContext();\n\nconst HomePage = () => {\n  const { isLoading } = useWaterData();\n\n  const [date, setDate] = useState({\n    year: dateNow.getFullYear(),\n    month: dateNow.getMonth(),\n    day: dateNow.getDate(),\n  });\n  const [titleMonth, setTitleMonth] = useState(\n    defineMonth(date.year, date.month, date.day)\n  );\n  const { isChangeNote, todayListModalOpen } = useWaterData();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getWaterToday());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isChangeNote) {\n      const params = {\n        year: date.year,\n        month: defineMonth(date.year, date.month, date.day),\n      };\n      dispatch(getMonthDays(params));\n    }\n  }, [titleMonth, date, isChangeNote, dispatch]);\n\n  return (\n    <HomeContext.Provider value={{ date, setDate, titleMonth, setTitleMonth }}>\n      <Wrapper>\n        <Container>\n          <Box>\n            <DailyNormaBox>\n              <DailyNorma />\n              <WaterRatioPanel />\n            </DailyNormaBox>\n\n            {todayListModalOpen && <TodayListModal />}\n\n            <WaterList>\n              <TodayWaterList />\n              <MonthStatsTable />\n            </WaterList>\n            {isLoading && <Loader />}\n          </Box>\n        </Container>\n      </Wrapper>\n    </HomeContext.Provider>\n  );\n};\n\nexport default HomePage;\n"],"names":["defineMonth","year","month","day","format","Date","dataTodaySelector","state","waterData","dataToday","selectTotalTodayDailyWater","createSelector","auth","user","dailyNorma","norma","totalTodayWater","reduce","total","dosage","Number","toFixed","selectIsLoading","isLoading","targetDaySelector","targetDay","daysOfMonthSelector","daysOfMonth","isChangeNoteSelector","isChangeNote","useWaterData","useSelector","totalTodayDailyWater","daysOfTheMonth","DailyNormaContainer","styled","_templateObject","_taggedTemplateLiteral","color","DailyNormaHeader","_templateObject2","DailyNormaContainerWaterStat","_templateObject3","DailyNormaWaterNorma","_templateObject4","DailyNormaButton","_templateObject5","Yup","gender","required","weight","min","activityTime","drankWaterAmount","Label","LableAddEdit","Input","AuthInput","SettingsInput","ErrorMessage","_templateObject6","_ref","inputType","label","error","props","_objectWithoutProperties","_excluded","_jsxs","children","_jsx","_objectSpread","ModalBox","ModalHeader","CloseButton","GenderFormulas","ItemsGenders","Formulas","VolumeNorm","_templateObject7","StyledForm","_templateObject8","FormTitle","_templateObject9","Genders","_templateObject10","Required","_templateObject11","L","_templateObject12","SaveWrapper","_templateObject13","toggleModal","useContext","ModalContext","dispatch","useDispatch","useAuth","_useState","useState","_useState2","_slicedToArray","calculatedWaterAmount","setCalculatedWaterAmount","calculateWaterAmount","useCallback","values","weightCoefficient","timeCoefficient","calculatedAmount","handleInputChange","e","fieldName","formik","handleChange","inputText","target","value","numericValue","parseFloat","isNaN","setFieldValue","handleSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","updateDailyNorma","resetForm","stop","apply","arguments","useFormik","initialValues","validationSchema","onSubmit","useEffect","Modal","onClose","_Fragment","onClick","Icon","name","width","height","fill","stroke","className","type","checked","onChange","FormInput","onBlur","handleBlur","touched","errors","concat","Button","DailyNormaModal","WaterInfoContainer","WaterInfo","WaterTime","ButtonControlContainer","ButtonControl","DeleteModalBox","ButtonBox","DeleteModalTitle","DeleteModalDescription","TitleBox","ButtonPadding","ButtonMargin","BrSpan","id","onClickCloseBtn","buttonType","style","boxShadow","deleteWaterTodayById","TodayModalListHeader","TodayModalListTitle","TodayModalListSubTitle","CommonContainer","AmountWaterContainer","AmountWaterButtonContainer","WaterValueContainer","WaterValue","ButtonContainer","SaveContainer","_templateObject14","_ref$type","length","lastAddWaterDosageIndex","waterValue","setWaterValue","_useState3","dateNow","hours","getHours","toString","minutes","getMinutes","_useState4","timeValue","setTimeValue","waterRecord","find","data","_id","time","water_attr","document","querySelectorAll","forEach","element","innerHTML","event","currentTarget","max","today","getDate","MONTH","getMonth","getFullYear","editWaterTodayById","saveWaterToday","waterInfo","TodayListModal","RemoveListItemModal","TodayWaterListItemContainer","TodayWaterListContainer","TodayWaterListing","TodayWaterListHeader","AddWaterButton","waterItems","Loader","map","waterItem","TodayWaterListItem","CalendarBox","HeadBox","List","Wrapper","MonthAndYear","Btn","_useContext","HomeContext","date","setDate","titleMonth","setTitleMonth","prevState","swithChangeNote","disabled","Item","isDone","CountDay","Percent","isToLeft","DateMonthTitle","MarkTitle","Mark","firstOfFourDaysArr","_ref$targetDay","_ref$targetDay$servin","servings","percent","includes","removeTargetDay","memo","setPercent","dayData","setDayData","_useState5","window","innerWidth","_useState6","isDesktop","setIsDesktop","_useWaterData","overall","acc","el","res","Math","round","handleResize","addEventListener","removeEventListener","handleOnTarget","info","setTargetDay","onMouseEnter","onMouseLeave","DaysGeneralStats","days","setDays","arrMonth","setArrMonth","arr","i","push","generateDaysArray","useDaysOfMonth","PaginationMonth","DayItemCalendar","WaterRatioPanelContainer","WaterRange","WaterRangeHeader","WaterRangeContainer","MarksContainer","LeftMark","RightMark","ele","querySelector","newVal","left","maxValue","minValue","readOnly","backgroundSize","createContext","_useWaterData2","todayListModalOpen","getWaterToday","params","getMonthDays","Provider","Container","Box","DailyNormaBox","DailyNorma","WaterRatioPanel","WaterList","TodayWaterList","MonthStatsTable"],"sourceRoot":""}